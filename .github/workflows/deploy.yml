name: Deploy to Render

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'CODE_OF_CONDUCT.md'
      - 'SECURITY.md'
      - '.gitignore'

# Prevent multiple deploys from running simultaneously
concurrency:
  group: deploy-to-render
  cancel-in-progress: true

jobs:
  deploy-to-render:
    runs-on: ubuntu-latest
    name: deploy-to-render
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Check for existing Render deploys
        id: check-deploys
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Checking for active deploys..."
          
          # Get recent deploys
          DEPLOYS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
            "https://api.render.com/v1/services/srv-d0971eeuk2gs73a2m2og/deploys?limit=3")
          
          echo "Recent deploys: $DEPLOYS"
          
          # Check if there's an active deploy in the last 2 minutes
          ACTIVE_DEPLOY=$(echo "$DEPLOYS" | grep -o '"status":"[^"]*"' | head -1 | grep -E '(created|pending|building)')
          
          if [ ! -z "$ACTIVE_DEPLOY" ]; then
            echo "Active deploy found, skipping GitHub Actions deploy"
            echo "skip_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "No active deploy, proceeding with GitHub Actions deploy"
            echo "skip_deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Wait for Render auto-deploy to start
        if: steps.check-deploys.outputs.skip_deploy == 'false'
        run: |
          echo "Waiting 45 seconds for Render auto-deploy to potentially start..."
          sleep 45

      - name: Check again for Render auto-deploy
        if: steps.check-deploys.outputs.skip_deploy == 'false'
        id: final-check
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Final check for auto-deploy..."
          
          DEPLOYS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
            "https://api.render.com/v1/services/srv-d0971eeuk2gs73a2m2og/deploys?limit=2")
          
          ACTIVE_DEPLOY=$(echo "$DEPLOYS" | grep -o '"status":"[^"]*"' | head -1 | grep -E '(created|pending|building)')
          
          if [ ! -z "$ACTIVE_DEPLOY" ]; then
            echo "Render auto-deploy is active, skipping GitHub Actions deploy"
            echo "final_skip=true" >> $GITHUB_OUTPUT
          else
            echo "No auto-deploy detected, triggering GitHub Actions deploy"
            echo "final_skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Trigger GitHub Actions Deploy
        if: steps.check-deploys.outputs.skip_deploy == 'false' && steps.final-check.outputs.final_skip == 'false'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "üöÄ Triggering GitHub Actions deploy for commit: ${{ github.sha }}"
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/srv-d0971eeuk2gs73a2m2og/deploys)
          echo "‚úÖ Deploy triggered via GitHub Actions"
          echo "üìã Response: $RESPONSE"

      - name: Deploy Skipped
        if: steps.check-deploys.outputs.skip_deploy == 'true' || steps.final-check.outputs.final_skip == 'true'
        run: |
          echo "‚è≠Ô∏è Deploy skipped - Render auto-deploy is handling this deployment"
          echo "This prevents overlapping deploys and cancellations"
